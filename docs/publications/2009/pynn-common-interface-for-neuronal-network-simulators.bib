@article{pynn-common-interface-for-neuronal-network-simulators,
 abstract = {Computational neuroscience has produced a diversity of software for simulations of networks of spiking neurons, with both negative and positive consequences. On the one hand, each simulator uses its own programming or configuration language, leading to considerable difficulty in porting models from one simulator to another. This impedes communication between investigators and makes it harder to reproduce and build on the work of others. On the other hand, simulation results can be cross-checked between different simulators, giving greater confidence in their correctness, and each simulator has different optimizations, so the most appropriate simulator can be chosen for a given modelling task. A common programming interface to multiple simulators would reduce or eliminate the problems of simulator diversity while retaining the benefits. PyNN is such an interface, making it possible to write a simulation script once, using the Python programming language, and run it without modification on any supported simulator (currently NEURON, NEST, PCSIM, Brian and the Heidelberg VLSI neuromorphic hardware). PyNN increases the productivity of neuronal network modelling by providing high-level abstraction, by promoting code sharing and reuse, and by providing a foundation for simulator-agnostic analysis, visualization, and data-management tools. PyNN increases the reliability of modelling studies by making it much easier to check results on multiple simulators. PyNN is open-source software and is available from http://neuralensemble.org/PyNN.},
 author = {Davison A.P. and Br√ºderle D. and Eppler J.M. and Kremkow and J. and Muller E. and Pecevski D.A. and Perrinet L. and Yger P.},
 doi = {10.3389/neuro.11.011.2008},
 full_text = {http://journal.frontiersin.org/article/10.3389/neuro.11.011.2008/abstract},
 journal = {Frontiers in Neuroinformatics},
 month = {January},
 title = {PyNN: a common interface for neuronal network simulators},
 volume = {2:11},
 year = {2009}
}

